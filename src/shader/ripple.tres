[gd_resource type="VisualShader" load_steps=29 format=3 uid="uid://et3amnj3t8ue"]

[ext_resource type="Script" path="res://src/shader/water_shader_noise.gd" id="1_rocdx"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_wsiep"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0.8, 0.8)]
op_type = 1

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_20pan"]
output_port_for_preview = 0
default_input_values = [2, 0.0]
initialized = true
script = ExtResource("1_rocdx")

[sub_resource type="VisualShaderNodeVec2Constant" id="VisualShaderNodeVec2Constant_vaj7p"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_bg8y3"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_hxhdd"]
constant = 8.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wxu3l"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_x1pi5"]
output_port_for_preview = 0
default_input_values = [1, 0.0, 2, 1.0, 3, -0.4, 4, 2.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_kjuvv"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 3.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_nebba"]
output_port_for_preview = 0
function = 14

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_pjvge"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_n07bq"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 3.0]
operator = 3

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_0wcdc"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_jv0m2"]
function = 14

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_7fmai"]
default_input_values = [0, 0.0, 1, 64.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qmsww"]
default_input_values = [0, 0.0, 1, 64.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_p23bq"]
function = 14

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ampvj"]
default_input_values = [0, 0.0, 1, 64.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_u2wqh"]
default_input_values = [0, 0.0, 1, 64.0]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_r0at5"]
output_port_for_preview = 0
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1u62n"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorDistance" id="VisualShaderNodeVectorDistance_sabj6"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.5, 0.5)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_yqpf3"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_o3rtd"]
parameter_name = "FloatParameter"
default_value_enabled = true
default_value = 1.7

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_wj7kr"]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_shdmx"]
default_input_values = [0, 0.0, 1, 5.0]
operator = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_kjh0p"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_td3rt"]
output_port_for_preview = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float FloatParameter = 1.70000004768372;


// PerlinNoise3D

		vec3 mod289_3(vec3 x) {
			return x - floor(x * (1.0 / 289.0)) * 289.0;
		}

		vec4 mod289_4(vec4 x) {
			return x - floor(x * (1.0 / 289.0)) * 289.0;
		}

		vec4 permute(vec4 x) {
			return mod289_4(((x * 34.0) + 1.0) * x);
		}

		vec4 taylorInvSqrt(vec4 r) {
			return 1.79284291400159 - 0.85373472095314 * r;
		}

		vec3 fade(vec3 t) {
			return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);
		}

		// Classic Perlin noise.
		float cnoise(vec3 P) {
			vec3 Pi0 = floor(P); // Integer part for indexing.
			vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1.
			Pi0 = mod289_3(Pi0);
			Pi1 = mod289_3(Pi1);
			vec3 Pf0 = fract(P); // Fractional part for interpolation.
			vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0.
			vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
			vec4 iy = vec4(Pi0.yy, Pi1.yy);
			vec4 iz0 = vec4(Pi0.z);
			vec4 iz1 = vec4(Pi1.z);

			vec4 ixy = permute(permute(ix) + iy);
			vec4 ixy0 = permute(ixy + iz0);
			vec4 ixy1 = permute(ixy + iz1);

			vec4 gx0 = ixy0 * (1.0 / 7.0);
			vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
			gx0 = fract(gx0);
			vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
			vec4 sz0 = step(gz0, vec4(0.0));
			gx0 -= sz0 * (step(0.0, gx0) - 0.5);
			gy0 -= sz0 * (step(0.0, gy0) - 0.5);

			vec4 gx1 = ixy1 * (1.0 / 7.0);
			vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
			gx1 = fract(gx1);
			vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
			vec4 sz1 = step(gz1, vec4(0.0));
			gx1 -= sz1 * (step(0.0, gx1) - 0.5);
			gy1 -= sz1 * (step(0.0, gy1) - 0.5);

			vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);
			vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);
			vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);
			vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);
			vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);
			vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);
			vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);
			vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);

			vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
			g000 *= norm0.x;
			g010 *= norm0.y;
			g100 *= norm0.z;
			g110 *= norm0.w;
			vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
			g001 *= norm1.x;
			g011 *= norm1.y;
			g101 *= norm1.z;
			g111 *= norm1.w;

			float n000 = dot(g000, Pf0);
			float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
			float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
			float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
			float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
			float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
			float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
			float n111 = dot(g111, Pf1);

			vec3 fade_xyz = fade(Pf0);
			vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
			vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
			float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);
			return 2.2 * n_xyz;
		}
	

void fragment() {
// Input:2
	vec2 n_out2p0 = UV;


// VectorDecompose:21
	float n_out21p0 = n_out2p0.x;
	float n_out21p1 = n_out2p0.y;


// FloatOp:23
	float n_in23p1 = 64.00000;
	float n_out23p0 = n_out21p0 * n_in23p1;


// FloatFunc:22
	float n_out22p0 = floor(n_out23p0);


// FloatOp:24
	float n_in24p1 = 64.00000;
	float n_out24p0 = n_out22p0 / n_in24p1;


// FloatOp:26
	float n_in26p1 = 64.00000;
	float n_out26p0 = n_out21p1 * n_in26p1;


// FloatFunc:25
	float n_out25p0 = floor(n_out26p0);


// FloatOp:27
	float n_in27p1 = 64.00000;
	float n_out27p0 = n_out25p0 / n_in27p1;


// VectorCompose:28
	vec2 n_out28p0 = vec2(n_out24p0, n_out27p0);


// Distance:3
	vec2 n_in3p1 = vec2(0.50000, 0.50000);
	float n_out3p0 = distance(n_out28p0, n_in3p1);


// FloatParameter:5
	float n_out5p0 = FloatParameter;


// FloatOp:4
	float n_out4p0 = n_out3p0 * n_out5p0;


// FloatFunc:6
	float n_out6p0 = 1.0 - n_out4p0;


// Input:8
	float n_out8p0 = TIME;


// FloatOp:7
	float n_in7p1 = 5.00000;
	float n_out7p0 = n_out8p0 / n_in7p1;


// FloatOp:9
	float n_out9p0 = n_out6p0 + n_out7p0;


// Mix:10
	vec2 n_in10p0 = vec2(0.00000, 0.00000);
	vec2 n_in10p2 = vec2(0.80000, 0.80000);
	vec2 n_out10p0 = mix(n_in10p0, vec2(n_out9p0), n_in10p2);


// Vector2Constant:12
	vec2 n_out12p0 = vec2(0.000000, 0.000000);


// FloatConstant:14
	float n_out14p0 = 8.000000;


// FloatConstant:13
	float n_out13p0 = 0.000000;


	float n_out11p0;
// PerlinNoise3D:11
	{
		n_out11p0 = cnoise(vec3((vec3(n_out10p0, 0.0).xy + vec3(n_out12p0, 0.0).xy) * n_out14p0, n_out13p0)) * 0.5 + 0.5;
	}


// FloatOp:15
	float n_out15p0 = n_out6p0 * n_out11p0;


	float n_out16p0;
// Remap:16
	float n_in16p1 = 0.00000;
	float n_in16p2 = 1.00000;
	float n_in16p3 = -0.40000;
	float n_in16p4 = 2.00000;
	{
		float __input_range = n_in16p2 - n_in16p1;
		float __output_range = n_in16p4 - n_in16p3;
		n_out16p0 = n_in16p3 + __output_range * ((n_out15p0 - n_in16p1) / __input_range);
	}


// FloatOp:17
	float n_in17p1 = 3.00000;
	float n_out17p0 = n_out16p0 * n_in17p1;


// FloatFunc:18
	float n_out18p0 = floor(n_out17p0);


// FloatOp:20
	float n_in20p1 = 3.00000;
	float n_out20p0 = n_out18p0 / n_in20p1;


// VectorOp:29
	vec2 n_in29p1 = vec2(1.00000, 1.00000);
	vec2 n_out29p0 = vec2(n_out20p0) + n_in29p1;


// Output:0
	COLOR.rgb = vec3(n_out29p0, 0.0);


}
"
graph_offset = Vector2(564.352, -49.3843)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(2940, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_pjvge")
nodes/fragment/2/position = Vector2(-1760, -40)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorDistance_sabj6")
nodes/fragment/3/position = Vector2(-380, 0)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_yqpf3")
nodes/fragment/4/position = Vector2(-40, 0)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_o3rtd")
nodes/fragment/5/position = Vector2(-540, 340)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatFunc_wj7kr")
nodes/fragment/6/position = Vector2(260, 0)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_shdmx")
nodes/fragment/7/position = Vector2(-6.37805, 510.577)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_kjh0p")
nodes/fragment/8/position = Vector2(-469.771, 661.07)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatOp_td3rt")
nodes/fragment/9/position = Vector2(520, 380)
nodes/fragment/10/node = SubResource("VisualShaderNodeMix_wsiep")
nodes/fragment/10/position = Vector2(740, 520)
nodes/fragment/11/node = SubResource("VisualShaderNodeCustom_20pan")
nodes/fragment/11/position = Vector2(1240, 340)
nodes/fragment/12/node = SubResource("VisualShaderNodeVec2Constant_vaj7p")
nodes/fragment/12/position = Vector2(739.289, 325.197)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatConstant_bg8y3")
nodes/fragment/13/position = Vector2(1040, 940)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatConstant_hxhdd")
nodes/fragment/14/position = Vector2(703.137, 933.484)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_wxu3l")
nodes/fragment/15/position = Vector2(1540, 260)
nodes/fragment/16/node = SubResource("VisualShaderNodeRemap_x1pi5")
nodes/fragment/16/position = Vector2(1787.19, 293.59)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_kjuvv")
nodes/fragment/17/position = Vector2(2040, 300)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatFunc_nebba")
nodes/fragment/18/position = Vector2(2281.86, 305.626)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_n07bq")
nodes/fragment/20/position = Vector2(2500, 320)
nodes/fragment/21/node = SubResource("VisualShaderNodeVectorDecompose_0wcdc")
nodes/fragment/21/position = Vector2(-1460, 100)
nodes/fragment/22/node = SubResource("VisualShaderNodeFloatFunc_jv0m2")
nodes/fragment/22/position = Vector2(-1160, -180)
nodes/fragment/23/node = SubResource("VisualShaderNodeFloatOp_7fmai")
nodes/fragment/23/position = Vector2(-1400, -100)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatOp_qmsww")
nodes/fragment/24/position = Vector2(-960, -60)
nodes/fragment/25/node = SubResource("VisualShaderNodeFloatFunc_p23bq")
nodes/fragment/25/position = Vector2(-1300, 300)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatOp_ampvj")
nodes/fragment/26/position = Vector2(-1460, 400)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatOp_u2wqh")
nodes/fragment/27/position = Vector2(-1060, 240)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorCompose_r0at5")
nodes/fragment/28/position = Vector2(-720, 20)
nodes/fragment/29/node = SubResource("VisualShaderNodeVectorOp_1u62n")
nodes/fragment/29/position = Vector2(2717.57, 400.519)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 5, 0, 4, 1, 4, 0, 6, 0, 8, 0, 7, 0, 7, 0, 9, 1, 6, 0, 9, 0, 9, 0, 10, 1, 10, 0, 11, 0, 12, 0, 11, 1, 13, 0, 11, 3, 14, 0, 11, 2, 6, 0, 15, 0, 11, 0, 15, 1, 15, 0, 16, 0, 16, 0, 17, 0, 17, 0, 18, 0, 18, 0, 20, 0, 2, 0, 21, 0, 21, 0, 23, 0, 23, 0, 22, 0, 22, 0, 24, 0, 26, 0, 25, 0, 25, 0, 27, 0, 21, 1, 26, 0, 24, 0, 28, 0, 27, 0, 28, 1, 28, 0, 3, 0, 20, 0, 29, 0, 29, 0, 0, 0)
